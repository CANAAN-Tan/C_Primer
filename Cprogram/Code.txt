#include<stdio.h>
#include<string.h>
#define PRAISE "You are an extraordinary being."
int main(void)
{
    char name[40]  ;

    printf("What's your name? ");
    scanf("%s", name);
    printf("Hello, %s. %s\n", name, PRAISE);

    printf("Your name of %zd letters occupies %zd memory cells.\n", strlen(name), sizeof name);
    printf("the phrase of praise has %zd letters ", strlen(PRAISE));
    printf("and occupies %zd memory cells.\n", sizeof PRAISE);


    return 0;   
}

// pizza.c
#include <stdio.h>
#define PI 3.14159
int main(void)
{
    float area, circum, radius;

    printf("What is the radius of your pizza?\n");
    scanf("%f", &radius);

    area = PI * radius *radius;
    circum = 2.0 * PI *radius;
    printf("Your basic pizza parameters are as follows:\n");
    printf("circumference = %1.2f, area = %1.2f\n", circum,area);

    return 0;
}

// 明示常量
#include <stdio.h>
#include <limits.h>
int main(void)
{
    printf("maxiumum %d\n", INT_MAX);
}

// defines.c -- 使用limit.h和float头文件中定义的明示常量。
#include <stdio.h>
#include <limits.h> // 整型限制
#include <float.h>  // 浮点型限制
int main(void)
{
    printf("Some number limits for this system: \n");
    printf("Biggest int: %d\n", INT_MAX);
    printf("Smallest long long: %lld\n", LLONG_MIN);
    printf("One byte = %d bits on this system.\n", CHAR_BIT);
    printf("Largest double: %e\n", DBL_MAX);
    printf("Smallest normal float: %e\n", FLT_MIN);
    printf("float precision = %d digits\n", FLT_DIG);
    printf("float epsilon = %e\n", FLT_EPSILON);

    return 0;

}


/* printout.c -- 使用转换说明  */
#include <stdio.h>
#define PI 3.141593
int main(void)
{
    int number = 7;
    float pies = 12.75;
    int cost = 7800;

    printf("The %d contestants ate %f berry pies.\n", number, pies);
    printf("The value of pi is %f.\n", PI);
    printf("Farewell! then art too dear for my possessing,\n");
    printf("%c%d\n", '$', 2 * cost);

    return 0;

}

/*width.c -- 字体宽度*/
#include <stdio.h>
#define PAGES 959
int main(void)
{
    printf("*%d*\n", PAGES);
    printf("*%2d*\n", PAGES);
    printf("*%10d\n*", PAGES);
    printf("*%-10d*\n", PAGES);

    return 0;
}

/*floats.c -- 一些浮点型装饰符*/
#include <stdio.h>
int main(void)
{
    const double RENT = 3852.99;    //const变量

    printf("*%f*\n", RENT);
    printf("*%e*\n", RENT);
    printf("*%4.2f*\n", RENT);
    printf("*%3.1f*\n", RENT);
    printf("*%10.3f*\n", RENT);
    printf("*%10.3E*\n", RENT);
    printf("*%+4.2f*\n", RENT);
    printf("*%010.2f*\n", RENT);

}

/*#5.1 shoesl.c*/
#include <stdio.h>
#define ADJUST 7.31     //字符常量
int main(void)
{
    const double SCALE = 0.333;//const变量 只读
    double shoe, foot;

    shoe = 9.0;
    foot = SCALE * shoe + ADJUST;
    printf("Shoe size (men's) foot length\n");
    printf("%10.1f %15.2f inches\n", shoe,foot);

    return 0;
}

/*#5.2 shoes2.c -- 计算多个不同鞋码对应的脚长*/
#include <stdio.h>
#define ADJUST 7.31     //字符常量
int main(void)
{
    const double SCALE = 0.333;//const 变量
    double shoe, foot;

    printf("Shoe size (men's)\tfoot length\n");
    shoe = 3.0;
    while (shoe < 18.5) /*while循环开始*/
    {                   /*块开始*/
        foot = SCALE * shoe +ADJUST;
        printf("%10.1f %15.2f inches\n", shoe, foot);
        shoe = shoe + 1.0;
    }                   /*块结束*/
    printf("If the shoe fits, wear it.\n");

    return 0;
}

/*golf.c -- 高尔夫锦标赛计分卡*/
#include <stdio.h>
int main(void)
{
    int jane, tarzan, cheeta;

    cheeta = tarzan = jane =68;
    printf("\t\tcheea\ttarzan\tjane\n");
    printf("First round score %4d %8d %8d\n", cheeta, tarzan, jane);

    return 0;  
}

/*#5.4squares.c -- 计算1~20的平方*/
#include <stdio.h>
int main(void)
{
    int num = 1;
    while ( num < 21)
    {
        printf("%4d %6d\n", num, num * num);
        num = num + 1;
    }
    return 0;
    
}

/*#5.5 wheat.c -- 指数增长*/
#include <stdio.h>
#define SQUARES 64      //棋盘中的方格数
int main(void)
{
    const double CROP = 2E16;   //士杰小麦年产谷粒数
    double current, total;
    int count = 1;

    printf("square    grains    total    ");
    printf("fraction of \n");
    printf("          added     garins   ");
    printf("world total\n");
    total = current = 1.0;      //从1颗谷粒开始
    printf("%4d %13.2e %12.2e %12.2e\n", count, current, total, total / CROP);

    while (count < SQUARES)
    {
        count = count + 1;
        current = 2.0 * current;    /*下一个方格谷粒翻倍*/
        total  = total + current;   /*更新总数*/
        printf("%4d %13.2e %12.2e %12.2e\n", count, current, total, total / CROP);
    }
    printf("That's all.\n");

    return 0;    
}

/* #5.6 divide.c -- 演示除法 */
#include <stdio.h>
int main(void)
{
    printf("integer division: 5/4 is %d \n", 5 / 4);
    printf("integer division: 6/3 is %d \n", 6 / 3);
    printf("integer division: 7/4 is %d \n", 7 / 4);
    printf("floating division: 7./4. is %1.2f \n", 7. / 4.);
    printf("mixed division: 7./4 is %1.2f \n", 7. / 4);

    return 0;
}

/* #5.8 sizeof.c -- 使用sizeof运算符 */
#include <stdio.h>
int main(void)
{
    int n = 0;
    size_t intsize;

    intsize = sizeof (int);
    printf("n = %d, n has %zd bytes; all ints have %zd bytes.\n", n, sizeof n, intsize);

    return 0;
}

/* #5.9 min_sec.c -- 把秒数转换成分和秒 */
#include <stdio.h>
#define SEC_PER_MIN 60      // 1分钟60秒
int main(void)
{
    int sec, min, left;

    printf("Convert seconds to minutes and seconds!\n");
    printf("Enter the number of seconds (<=0 to quit):\n");
    scanf("%d", &sec);
    while (sec > 0)
    {
        min = sec / SEC_PER_MIN;       // 阶段分钟数
        left = sec % SEC_PER_MIN;       // 剩下的秒数
        printf("%d seconds is %d minutes, %d seconds.\n", sec, min, left);
        printf("Enter next value (<=0 to quit):\n");
        scanf("%d", &sec);
    }
    printf("Done!\n");

    return 0;
    
}

/* #5.11 post_pre.c -- 前缀和后缀 */
#include <stdio.h>
int main(void)
{
    int a = 1, b = 1;
    int a_post, pre_b;

    a_post = a++;
    pre_b = ++b;
    printf("a a_post b pre_b \n");
    printf("%1d %5d %5d %5d\n", a, a_post, b, pre_b);

    return 0;
}

/* #5.12 递减bottles.c */
#include <stdio.h>
#define MAX 100
int  main(void)
{
    int count = MAX + 1;

    while (--count > 0)
    {
        printf("%d bottles of spring water on the wall, %d bottles of spring water!\n", count, count);
        printf("Take one down and pass it around,\n");
        printf("%d bottles of spring water\n\n", count - 1);
    }
    return 0;
}

/* #5.15 pound.c -- 定义一个带一个参数的函数 */
#include <stdio.h>
void pound(int n);

int main(void)
{
    int times = 5;
    char ch = '!';      //ASCII码是33
    float f = 6.0f;

    pound(times);       //int类型的参数
    pound(ch);          //和pound((int)ch)；相同
    pound(f);           //和pound（（int）f）；相同

    return  0;
}

void pound(int n)
{
    while (n-- > 0)
        printf("#");
    printf("\n");
}

/* #6.1 summing.c -- 根据用户键入的整数求和 */
#include <stdio.h>
int main(void)
{
    long num;
    long sum = 0L;      //把sum初始化为0

    int status;

    printf("Please enter an integer to be summed ");
    printf("(q to quit): ");

    status = scanf("%ld", &num);

    while (status == 1)     //==意思是等于1
    {
        sum = sum + num;
        printf("Please enter next integer (q to quit): ");
        status = scanf("%ld", &num);
    }
    printf("Those integers sum to %1d.\n", sum);

    return 0;
}

/* #6.5 cmpflt.c -- 浮点数比较 */
#include <math.h>
#include <stdio.h>
int main(void)
{
    const double ANSWER =3.14159;
    double response;

    printf("What is the value of pi?\n");
    scanf("%lf", &response);
    while (fabs(response - ANSWER) > 0.0001)
    {
        printf("Try agein!\n");
        scanf("%lf", &response);
    }
    printf("Close enough!\n");
}

/* #6.11 sweetie.c -- 使用for循环的计数循环 */
#include <stdio.h>
int main(void)
{
    const int NUMBER = 22;
    int count;

    for (count = 1; count <= NUMBER; count++)
        printf("Be my Valentine!\n");
    return 0;
}

/* #6.12 for_cube.c -- 使用for循环创建一个立方表 */
#include <stdio.h>
int main(void)
{
    int num;
    printf("    n    n cubed\n");

    for (num = 1; num <= 6; num++)
    {
        printf("%5d %5d\n", num, num*num*num);
    }
    return 0;
}

/* #6.13 postage.c -- 一类邮资 */
#include <stdio.h>
int main(void)
{
    const int FIRST_OZ = 46;    // 2013邮资
    const int NEXT_OZ =20;  //2013邮资
    int ounces, cost;

    printf("ounces cost\n");
    for (ounces =1, cost = FIRST_OZ; ounces <= 16; ounces++, cost+= NEXT_OZ)
        printf("%5d $%4.2f\n", ounces, cost / 100.0);

    return 0;
    
}

/* #6.15do_while.c -- 出口条件循环 */
#include <stdio.h>
int main(void)
{
    const int secret_code = 13;
    int code_enterd;

    do
    {
        scanf("%d", &code_enterd);
    } while (code_enterd != secret_code);
    printf("cured!\n");

    return 0;
}

/* #6.17 rowsl.c -- 使用嵌套循环 */
#include <stdio.h>
#define ROWS 6
#define CHARS 10
int main(void)
{
    int row;
    char ch;

    for (row = 0; row < ROWS; row++)
    {
        for (ch = 'A'; ch < ('A' + CHARS); ch++)
            printf("%c", ch);
        printf("\n");
            
    }
    return 0;
    
}

// #6.18 rows2.c -- 依赖外部循环的嵌套循环
#include <stdio.h>
int main(vvoi)
{
    const int ROWS = 6;
    const int CHARS = 6;
    int row;
    char ch;
    for (row = 0; row < ROWS; row++)
    {
        for (ch =  ('A' + row); ch < ('A' + CHARS); ch++)
            printf("%c", ch);
        printf("\n");
    }
    return 0;
}

/* #6.19 scores_in.c -- 使用循环处理数组 */
#include <stdio.h>
#define SIZE 10
#define PAR 72
int main(void)
{
    int index, score[SIZE];
    int sum = 0;
    float average;

    printf("Enter %d golf score:\n", SIZE);
    for (index = 0; index < SIZE; index++)
        scanf("%d", &score[index]);     // 读取10个分数

    printf("The scores read in are as follow:\n");
    for (index = 0; index < SIZE; index++)
        printf("%5d", score[index]);    // 验证输入
    printf("\n");

    for (index = 0; index < SIZE; index++)
        sum += score[index];            // 求总分数
    average = (float) sum / SIZE;       // 求平均数

    printf("Sum of scores = %d, average = %.2f\n", sum, average);

    printf("That's a handicap of %.0f.\n", average - PAR);

    return 0;
}

/* #6.20 power.c -- 计算数的整数幂 */
#include <stdio.h>
double power(double n, int p);      // ANSI函数原型

int main(void)
{
    double x, xpow;
    int exp;

    printf("Enter a number and the positive integer power");
    printf(" to which\nthe number will be raised. Enter q");
    printf(" to quit.\n");

    while (scanf("%lf%d", &x, &exp) == 2)
    {
        xpow = power(x, exp);   // 函数调用
        printf("%.3g to the power %d is %.5g\n", x, exp, xpow);
        printf("Enter next pair of numbers or q to quit.\n");
    }
    printf("Hope you enjoyed this power trip -- bye!\n");
    return 0;
}

double power(double n, int p)   // 函数定义
{
    double pow = 1;
    int i;

    for (i = 1; i <=p; i++)
        pow *= n;
    
    return pow;         // 返回pow的值
}

/* #6.16.1 编写一个程序，创建一个包含 26 个元素的数组，并在其中储存 26 个小写字。然后打印数组的所有内容。*/
#include <stdio.h>
int main()
{
    char arr[26];

    for (int i = 0; i < 26; i++)
        arr[i] = 'a' + i;
    for (int i = 0; i < 26; i++)
        printf("%c\n", arr[i]);

    return 0;
    
}

/* #6.16.2 -- C语言编写一个程序，使用嵌套循环，打印五行，按行数打印相应数目的$*/
#include <stdio.h>

int main() 
{
    for (int i = 1; i <= 5; i++) {
        for (int j = 1; j <= i; j++) {
            printf("");
        }
        printf("\n");
    }
    return 0;
}

/* #6.16.3*/
#include <stdio.h>

int main() 
{
    for (int i = 1; i <= 6; i++) {
        for (int j = 1; j <= i; j++) 
            {
                printf("%c", 'F'-(j-1));
            }
        printf("\n");
    }
    return 0;
}

/* #6.16.4*/
#include <stdio.h>
int main()
{
    int i,j;
    char c='A';
    for(i=1;i<=21;i++)
    {
        for(j=1;j<=i;j++)
        {
            printf("%c",c);
            c++;
        }
        printf("\n");
        if(c>'U')
            break;
    }
    return 0;
}

/* #7.1 colddays.c -- 找出0℃以下的天数占总天数的百分比 */
#include <stdio.h>
int main()
{
    const int FREEZING = 0;
    float temperature = 0;
    int cold_days = 0;
    int all_days = 0;

    printf("Enter the list of daily low temperature.\n");
    printf("Use Clesius, and enter q to quit.\n");

    while (scanf("%f", &temperature) == 1)
        {
            all_days++;
            if (temperature < FREEZING)
                cold_days++;
        }
    if (all_days != 0)
        printf("%d days total: %.1f%% were below freezing.\n", all_days, 100.0 * (float) cold_days / all_days);
    if (all_days == 0)
        printf("No data entered!\n");

    return 0;
    
}

/* #7.2 cypherl.c -- 更改输入，空格不变 */
#include <stdio.h>
#define SPACE ' '       // SPACE表示单引号-空格-单引号
int main(void)
{
    char ch;

    ch = getchar();     // 读取一个字符
    while (ch != '\n')     // 当一行未结束时 
    {
        if (ch == SPACE)    // 留下空格
            putchar(ch);    // 该字符不变
        else
            putchar(ch + 1);     // 改变其他字符
        ch = getchar();      // 获取下一个字符
    }
    putchar(ch);        // 打印换行符

    return 0;
}

/* #7.3 cypher.c -- 替换输入的字母，非字母字符保持不变 */
#include <stdio.h>
#include <ctype.h>
int main(void)
{
    char ch;

    while ((ch = getchar()) != '\n')
    {
        if (isalpha(ch))
            putchar(ch + 1);
        else
            putchar(ch);
    }
    putchar(ch);

    return 0;
}

/* #7.7 wordcnt.c -- 统计字符数、单词数、行数 */
#include <stdio.h>
#include <ctype.h>      // 为isspace（）函数提供原型
#include <stdbool.h>    // 为bool、true、false提供定义
#define STOP '|'
int main(void)
{
    char c; // 读入字符
    char prev;  // 读入的前一个字符
    long n_chars = 0L;  // 字符数
    int n_lines = 0;    //行数
    int n_words = 0;    //单词数
    int p_lines = 0;    // 不完整的行数
    bool inword = false;    // 如果c在单词中，inword等于true

    printf("Enter text to be analyzed (| to terminate):\n");
    prev = '\n';    // 用于识别完整的行
    while ((c = getchar() != STOP))
    {
        n_chars++;
        if (c == '\n')
            n_lines++;
        if (!isspace(c) && !inword)
            {
                inword = true;
                n_words++;
            }
        if (isspace(c) && inword)
            inword = false;
        prev = c;
    }
    if (prev != 'n')
        p_lines = 1;
    printf("characters = %ld, words = %d, lines = %d, ",n_chars, n_words, n_lines);
    printf("partial lines = %d\n", p_lines);

    return 0;
}

/* #7.8 paint.c -- 使用条件运算符 */
#include <stdio.h>
#define COVERAGE 350        // 每罐油漆可刷的面积（单位：平方英尺）
int main(void)
{
    int sq_feet;
    int cans;

    printf("Enter number of square feet to be painted:\n");
    while (scanf("%d", &sq_feet) == 1)
    {
        cans = sq_feet / COVERAGE;
        cans += (sq_feet % COVERAGE == 0) ? 0 : 1;
        printf("You need %d %s of paint.\n", cans, cans == 1 ? "can" : "cans");
        printf("Enter next value (q to quit):\n");
    }
    return 0;
}

/* #7.9 skippart.c -- 使用continue跳过部分循环 */
#include <stdio.h>
int main(void)
{
    const float MIN = 0.0f;
    const float MAX = 100.0f;

    float score;
    float total = 0.0f;
    int n = 0;
    float min = MAX;
    float max = MIN;

    printf("Enter the first score (q to quit):");
    while (scanf("%f", &score) == 1)
    {
        if (score < MIN || score > MAX)
        {
            printf("%0.1f is an invalid value. Try again: ", score);
            continue;   // 跳转至while循环的测试条件
        }
        printf("Accepting %0.1f:\n", score);
        min = (score < min) ? score : min;
        max = (score > max) ? score : max;
        total += score;
        n++;
        printf("Enter next score (q to quit): ");
    }
    if (n > 0)
    {
        printf("Average of %d scores is %0.1f.\n", n, total / n);
        printf("Low = %0.1f, high = %0.1f\n", min, max);
    }
    else
        printf("No valid scores were entered.\n");
    return 0;
 
}

/* #7.11 animal.c -- 使用switch语句 */
#include <stdio.h>
#include <ctype.h>
int main(void)
{
    char ch;

    printf("Give me a letter of the alphabet, and I will give ");
    printf("an animal name\nbeginning with that letter.\n");
    printf("Please type in a letter; type # to end my act.\n");
    while ((ch = getchar()) != '#')
    {
        if ('\n' == ch)
            continue;
        if (islower(ch))
            switch (ch)
            {
            case 'a':
                printf("argali, a wild sheep of Asia\n");
                break;
            case 'b':
                printf("babirusa, a wild pig of Malay\n");
                break;
            case 'c':
                printf("coati, racoonlike mammal\n");
                break;
            default:
                printf("That's a stumper!\n");
            }
        else
            printf("I recognize only lowercase letters.\n");
        while (getchar() != '\n')
            continue;
        printf("Please type another letter or a #.\n");
    }
    printf("Bye!\n");

    return 0;
    
}

/* #7.12 vowels.c -- 使用多重标签 */
#include <stdio.h>
int main(void)
{
    char ch;
    int a_ct, e_ct, i_ct, o_ct, u_ct;

    a_ct = e_ct = i_ct = o_ct = u_ct = 0;

    printf("Enter some text; enter # to quit.\n");
    while ((ch = getchar()) != '#')
    {
        switch (ch)
        {
        case 'a':
        case 'A':   a_ct++;
                    break;
        case 'e':
        case 'E':   e_ct++;
                    break;
        case 'i':
        case 'I':   i_ct++;
                    break;
        case 'o':
        case 'O':   o_ct++;
                    break;
        case 'u':
        case 'U':   u_ct++;
                    break;
        default:    break;     
        }   // switch结束
    }       // while结束
    printf("number of vowels: A E I O U\n");
    printf("                   %4d %4d %4d %4d %4d\n",a_ct, e_ct, i_ct, o_ct, u_ct);

    return 0;
    

}

/* #8.1 -- 重复输入 */
#include <stdio.h>
int main(void)
{
    char ch;

    while ((ch = getchar()) != '#')
        putchar(ch);

    return 0;
}

/* #8.2 echo.c -- 重复输入，直到文件结尾 */
#include <stdio.h>
int main(void)
{
    int ch;

    while ((ch = getchar()) != EOF) // EOF已在stdio.h中定义
        putchar(ch);

    return 0;
}

/* #8.3 file.c -- 打开一个文件并显示该文件 */
#include <stdio.h>
#include <stdlib.h> // 为了使用exit()

int main()
{
    int ch;
    FILE * fp;
    char fname[50];     // 储存文件名

    printf("Enter the name of the file: ");
    scanf("%s", fname);
    fp = fopen(fname, "r");     // 打开待读取文件
    if (fp = NULL)
    {
        printf("Failed to open file. Bye\n");
        exit(1);        // 退出程序
    }
    // getc(fp)从打开的文件中获取一个字符
    while ((ch = getc(fp)) != EOF)
        putchar(ch);
    fclose(fp);     // 关闭文件

    return 0;
}

/* menuette.c -- 菜单程序 */
#include <stdio.h>

char get_choice(void);
char get_first(void);
int get_int(void);
void count(void);

int main(void)
{
    int choice;
    void count(void);

    while ((choice = get_choice()) != 'q')
    {
        switch (choice)
        {
        case 'a': printf("Buy low, sell high.\n");
                break;
        case 'b': putchar('\a');    /* ANSI */
                break;
        case 'c': count();
                break;                
        default: printf("Program error!");
            break;
        }
    }

    printf("Bye!\n");

    return 0;

}

void count(void)
{
    int n, i;

    printf("Count how far? Enter an integer:\n");
    n = get_int();
    for (i = 1; i <= n; i ++)
        printf("%d\n", i);
    while (getchar() != '\n')
        continue;
}

char get_choice(void)
{
    int ch;

    printf("Enter the letter of your choice:\n");
    printf("a. advice        b. bell\n");
    printf("c. count         d. quit\n");
    ch = get_first();
    while ((ch < 'a' || ch > 'c') && ch != 'q')
    {
        printf("Please repond with a, b, c, or q.\n");
        ch = get_first();
    }
    return ch;
}

char get_first(void)
{
    int ch;

    ch = getchar();
    while (getchar() != '\n')
        continue;

    return ch;
}

int get_int(void)
{
    int input;
    char ch;

    while (scanf("%d", &input) != 1)
    {
        while ((ch = getchar()) != '\n')
            putchar(ch);  // 处理错误输出
        printf(" is not an integer. \nPlease enter an ");
        printf("integer value, such as 25, -178, or 3: ");
    }

    return input;
    
}

/* 9.1 lethead1.c */
#include <stdio.h>
#define NAME "GIGATHINK, INC."
#define ADDRESS "101 Megabuck Plaza"
#define PLACE "Megapolis, CA 94904"
#define WIDTH 40

void starbar(void); /* 函数原型 */

int main(void)
{
    starbar();
    printf("%s\n", NAME);
    printf("%s\n", ADDRESS);
    printf("%s\n", PLACE);
    starbar();  /* 使用函数 */

    return 0;
}

void starbar(void) /* 定义函数 */
{
    int count;

    for (count = 1; count <= WIDTH; count++)
        putchar('*');
        putchar('\n');
    
}/* 9.2 lethead2.c */
#include <stdio.h>
#include <string.h>     /* 为strlen（）提供原型 */
#define NAME "GIGATHINK, INC."
#define ADDRESS "101 Megabuck Plaza"
#define PLACE "Megapolis, CA 94904"
#define WIDTH 40
#define SPACE ' '

void show_n_char(char ch, int num);

int main(void)
{
    int spaces;

    show_n_char('*', WIDTH);                    /* 用符号常量作为参数 */
    putchar('\n');
    show_n_char(SPACE, 12);                     /* 用符号常量作为参数 */
    printf("%s\n", NAME);
    spaces = (WIDTH - strlen(ADDRESS)) / 2;     /* 计算要跳过多少个空格 */

    show_n_char(SPACE, spaces);                 /* 用一个变量作为参数 */
    printf("%s\n", ADDRESS);

    show_n_char(SPACE, (WIDTH - strlen(PLACE)) / 2);

    printf("%s\n", PLACE);                      /* 用一个表达式作为参数 */
    show_n_char("*", WIDTH);
    putchar('\n');

    return 0;
}

/* show_n_char()函数的定义 */
void show_n_char(char ch, int num)
{
    int count;

    for (count =1; count <= num; count++)
        putchar(ch);
}